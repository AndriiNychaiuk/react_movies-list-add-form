{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImdbId","setImgUrl","setImdbUrl","titleError","setTitleError","imdbIdError","setImdbIdError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","checkRepeatedId","some","isButtonDisabled","validateField","atr","func","atrName","errorPhrase","onSubmit","event","preventDefault","type","name","placeholder","classnames","value","onChange","target","onClick","split","char","i","filter","_","join","length","disabled","App","moviesFromServer","setMovies","key","setKey","newKey","String","Number","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61de0922.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n  movies: Movie[]\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd, movies }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [imdbIdError, setImdbIdError] = useState('');\n  const [imgUrlError, setImgUrlError] = useState('');\n  const [imdbUrlError, setImdbUrlError] = useState('');\n  const checkRepeatedId = movies.some(movie => movie.imdbId === imdbId);\n  // eslint-disable-next-line max-len\n  const isButtonDisabled = !title || !imdbId || !imgUrl || !imdbUrl || checkRepeatedId;\n\n  const errorPhrase = (atr: string) => {\n    return `Enter ${atr}, please`;\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n  };\n\n  const validateField = (\n    atr: string,\n    func: (value: React.SetStateAction<string>) => void,\n    atrName: string,\n  ) => {\n    func('');\n\n    if (!atr) {\n      func(errorPhrase(atrName));\n    }\n  };\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleChange = () => {\n    if (title && imdbId.length === 9 && imgUrl && imdbUrl && !checkRepeatedId) {\n      onAdd({\n        title,\n        description,\n        imdbId,\n        imgUrl,\n        imdbUrl,\n      });\n\n      reset();\n    }\n  };\n\n  const controlValidId = (str: string) => {\n    return str.split('').map((char, i) => {\n      if (i < 2) {\n        return 't';\n      }\n\n      return char;\n    }).filter((_, i) => i < 9).join('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <div className=\"form__unit\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"title\"\n            className={classnames('input form__input', {\n              'is-danger': !title && titleError,\n              'is-primary': title,\n            })}\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n            onClick={() => {\n              validateField(title, setTitleError, 'title');\n            }}\n          />\n          <p className=\"form__error\">{!title && titleError}</p>\n        </div>\n\n        <div className=\"form__unit\">\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"description\"\n            className={classnames('input form__input', {\n              'is-primary': description,\n            })}\n            value={description}\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"form__unit\">\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"id (must have 9 symbols)\"\n            className={classnames('input form__input', {\n              'is-danger': (!imdbId && imdbIdError)\n              || (imdbIdError && checkRepeatedId),\n              'is-primary': imdbId,\n            })}\n            value={imdbId}\n            onChange={(event) => {\n              setImdbId(controlValidId(event.target.value));\n\n              if (checkRepeatedId) {\n                setImdbIdError('Use another id please');\n              } else {\n                setImdbIdError('');\n              }\n            }}\n            onClick={() => {\n              validateField(imdbId, setImdbIdError, 'id');\n            }}\n          />\n          <p className=\"form__error\">\n            {(!imdbId && imdbIdError) || (checkRepeatedId && imdbIdError)}\n          </p>\n        </div>\n\n        <div className=\"form__unit\">\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"image url\"\n            value={imgUrl}\n            className={classnames('input form__input', {\n              'is-danger': !imgUrl && imgUrlError,\n              'is-primary': imgUrl,\n            })}\n            onChange={(event) => {\n              setImgUrl(event.target.value);\n            }}\n            onClick={() => {\n              validateField(imgUrl, setImgUrlError, 'image URL');\n            }}\n          />\n          <p className=\"form__error\">{!imgUrl && imgUrlError}</p>\n        </div>\n\n        <div className=\"form__unit\">\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imbd url\"\n            className={classnames('input form__input', {\n              'is-danger': !imdbUrl && imdbUrlError,\n              'is-primary': imdbUrl,\n            })}\n            value={imdbUrl}\n            onChange={(event) => {\n              setImdbUrl(event.target.value);\n            }}\n            onClick={() => {\n              validateField(imdbUrl, setImdbUrlError, 'imdb URL');\n            }}\n          />\n          <p className=\"form__error\">{!imdbUrl && imdbUrlError}</p>\n        </div>\n\n        <button\n          type=\"submit\"\n          className={classnames('button is-primary', {\n            'is-danger': isButtonDisabled,\n          })}\n          onClick={handleChange}\n          disabled={isButtonDisabled}\n        >\n          Add movie\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport 'bulma';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const [key, setKey] = useState('');\n  const addMovie = (movie: Movie) => {\n    const newKey = `tt${String((Number(movies[0].imdbId.slice(1)) + 1))}`;\n\n    setMovies([...movies, movie]);\n    setKey(newKey);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie key={key} onAdd={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}